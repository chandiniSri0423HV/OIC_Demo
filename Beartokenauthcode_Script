pipeline {
    agent any

    environment {
        OIC_SCOPE = 'https://59D040337868449CB0014B649FE827EC.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all'
        TOKEN_ENDPOINT = 'https://idcs-b0bf5647dbe34af4914cf420cba0294c.identity.oraclecloud.com/oauth2/v1/token'
    }

    stages {
        stage('Checkout Repo') {
            steps {
                checkout scm
            }
        }

        stage('Generate Bearer Token') {
            steps {
                withCredentials([string(credentialsId: 'Basic_Auth', variable: 'BASIC_AUTH')]) {
                    bat """
                    curl -s --request POST "%TOKEN_ENDPOINT%" ^
                        --header "Authorization: Basic %BASIC_AUTH%" ^
                        --header "Content-Type: application/x-www-form-urlencoded" ^
                        --data-urlencode "grant_type=client_credentials" ^
                        --data-urlencode "scope=%OIC_SCOPE%" ^
                        --insecure -o token.json

                    for /f "tokens=2 delims=:\\\" " %%A in ('findstr "access_token" token.json') do echo %%A > token.txt
                    """
                }
            }
        }

        stage('Import Integration') {
            steps {
                script {
                    def token = readFile('token.txt').trim()
                    echo "Using Token: ${token.substring(0, 20)}..." // Only show first 20 characters

                    bat """
                    curl -X POST "https://your-oic-instance.integration.ocp.oraclecloud.com/ic/api/integration/v1/integrations/import" ^
                        -H "Authorization: Bearer ${token}" ^
                        -H "Content-Type: application/json" ^
                        --data-binary "@YourIntegrationFile.json" ^
                        --insecure
                    """
                }
            }
        }
    }

    post {
        failure {
            echo 'Pipeline failed!'
        }
        success {
            echo 'Pipeline succeeded!'
        }
    }
}
