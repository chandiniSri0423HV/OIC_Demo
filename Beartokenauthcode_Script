def passwordHandler(String input) {
    StringBuilder result = new StringBuilder()
    for (int i = 0; i < input.length(); i++) {
        if (input.charAt(i) == '%') {
            result.append('%')
        }
        result.append(input.charAt(i))
    }
    return result.toString()
}

def Update_details(instance_selected) {
    if (instance_selected.equals("DEV")) {
        env.USR = env.DEV_Creds_USR
        env.PSW = env.DEV_Creds_PSW
        env.serviceURL = env.DEV_URL
    } else if (instance_selected.equals("UAT")) {
        env.USR = env.DEV_Creds_USR
        env.PSW = env.DEV_Creds_PSW
        env.serviceURL = env.TEST_URL
        env.testInstance = env.test_Integration_Instance
    }
}

pipeline {
    agent any
    environment {
        DEV_Creds = credentials('DEV_CredID')
    }
    stages {

        stage('Generate Bearer Token') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'client_id', variable: 'CLIENT_ID'),
                                     string(credentialsId: 'client_secret', variable: 'CLIENT_SECRET')]) {

                        // Use bat to generate the token and extract it into a file
                        bat """
                            curl -s "https://idcs-b0bf5647dbe34af4914cf420cba0294c.identity.oraclecloud.com/oauth2/v1/token" ^
                            --header "Authorization: Basic ${CLIENT_ID}:${CLIENT_SECRET}" ^
                            --header "Content-Type: application/x-www-form-urlencoded" ^
                            --data-urlencode "grant_type=client_credentials" ^
                            --data-urlencode "scope=https://59D040337868449CB0014B649FE827EC.integration.ocp.oraclecloud.com:443urn:opc:resource:consumer::all" ^
                            --insecure -o token.json

                            for /f "tokens=2 delims=:\\" %%A in ('findstr "access_token" token.json') do (
                                echo %%~A > token.txt
                            )
                        """

                        // Read the token from file into env variable
                        env.OAUTH_TOKEN = readFile('token.txt').trim()
                    }
                }
            }
        }

        stage('Import Integration') {
            steps {
                script {
                    def serviceURL = "https://design.integration.us-ashburn-1.ocp.oraclecloud.com"
                    def testInstance = "testinstance-idevjxz332qf-ia"

                    if (params.InstanceURL.toString() == "DEV") {
                        echo "Using DEV environment"
                        serviceURL = env.DEV_URL
                        testInstance = env.test_Integration_Instance
                    }

                    def selectedOption = "${params.Import_Method}".trim()
                    if (selectedOption == 'New') {
                        bat """
                            curl --location "${serviceURL}/ic/api/integration/v1/integrations/archive?integrationInstance=${testInstance}" ^
                            --header "Authorization: Bearer ${env.OAUTH_TOKEN}" ^
                            --form "file=@\\"${params.IARFileName}\\""
                        """
                    }
                }
            }
        }
    }
}
