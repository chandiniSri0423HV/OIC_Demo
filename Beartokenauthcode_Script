pipeline {
    agent any

    environment {
        OIC_HOST       = 'https://design.integration.us-ashburn-1.ocp.oraclecloud.com'
        TOKEN_URL      = 'https://idcs-b0bf5647dbe34af4914cf420cba0294c.identity.oraclecloud.com/oauth2/v1/token'
        INSTANCE_PARAM = '?integrationInstance=testinstance-idevjxz332qf-ia'
        ARCHIVE_FILE   = 'ITEM_INTEGRATION_01.00.0000.iar'
    }

    stages {
        stage('Generate Bearer Token') {
            steps {
                withCredentials([string(credentialsId: 'Basic_Auth_Encoded', variable: 'ENCODED_AUTH')]) {
                    bat """
                        echo ==== Generate Bearer Token ====

                        curl -s --request POST "%TOKEN_URL%" ^
                        --header "Authorization: Basic %ENCODED_AUTH%" ^
                        --header "Content-Type: application/x-www-form-urlencoded" ^
                        --data-urlencode "grant_type=client_credentials" ^
                        --data-urlencode "scope=%OIC_HOST%:443urn:opc:resource:consumer::all" ^
                        --insecure > token.json

                        echo ==== Extract Bearer Token ====
                        for /f "tokens=2 delims=:\\" " %%A in ('findstr "access_token" token.json') do echo %%A > token.txt

                        REM Clean token if it ends with comma or extra quotes
                        set /p RAW_TOKEN=<token.txt
                        for %%A in (!RAW_TOKEN:,=!) do echo %%~A > token.txt
                        type token.txt
                    """
                }
            }
        }

        stage('Import Integration Archive') {
            steps {
                bat """
                    setlocal enabledelayedexpansion
                    set /p BEARER_TOKEN=<token.txt

                    echo ====== Starting Import Integration with Token ======
                    echo Token: !BEARER_TOKEN!

                    curl --location --request POST "%OIC_HOST%/ic/api/integration/v1/integrations/archive%INSTANCE_PARAM%" ^
                    --header "Authorization: Bearer !BEARER_TOKEN!" ^
                    --header "Accept: application/json" ^
                    --form "file=@%ARCHIVE_FILE%" ^
                    --form "type=application/octet-stream" ^
                    --insecure
                    endlocal
                """
            }
        }
    }
}
