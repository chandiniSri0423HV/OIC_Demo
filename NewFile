pipeline {
    agent any

    environment {
        DEV_Creds = credentials('DEV_CredID') // Jenkins credential (username/password)
    }

    stages {
        stage('Set Environment') {
            steps {
                script {
                    if (params.InstanceURL?.trim() == "DEV") {
                        def creds = env.DEV_Creds.split(':')
                        env.USR = creds[0]
                        env.PSW = creds[1]
                        env.serviceURL = env.DEV_URL
                        env.testInstance = env.test_Integration_Instance
                    } else {
                        error "Unsupported environment: ${params.InstanceURL}"
                    }
                }
            }
        }

        stage('Import Integration') {
            steps {
                script {
                    if (params.Import_Method?.trim() == 'New') {
                        echo 'Adding new integration...'

                        def integURL = "${env.serviceURL}/ic/api/integration/v1/integrations/archive?integrationInstance=${env.testInstance}"
                        def deployCmd = """curl --location "${integURL}" ^
--user ${env.USR}:${env.PSW} ^
--form "file=@\\"${params.IARFileName}\\"" """

                        bat label: 'Import Integration', script: deployCmd
                    } else {
                        echo "Import method '${params.Import_Method}' is not handled in this script."
                    }
                }
            }
        }
    }
}
