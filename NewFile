def passwordHandler(String input) {
   StringBuilder result = new StringBuilder()
   for (int i = 0; i < input.length(); i++) {
       if (input.charAt(i) == '%') {
           result.append('%')
       }
       result.append(input.charAt(i))
   }
   return result.toString()
}


 

pipeline {
    agent any
    environment {
        DEV_Creds = credentials('DEV_CredID')
    }
   /* parameters {
        booleanParam(name: 'Activate_Integration', defaultValue: false, description: 'Check the box to activate the integration after importing')
    }*/

 

    stages {
        stage('Import Integration') {
            steps {
                script {
if (params.InstanceURL.toString() == "DEV") {
                        echo "inside update details - DEV"
                        env.USR = env.DEV_Creds_USR
                        env.PSW = env.DEV_Creds_PSW
                        env.serviceURL = env.DEV_URL
                        env.testInstance = env.test_Integration_Instance
                    }

                    echo "${env.serviceURL}"
                    def selectedOption = "${params.Import_Method}".trim()
                    if (selectedOption == 'New') {
                        echo 'Adding new integration'
                        def integURL = "${env.serviceURL}/ic/api/integration/v1/integrations/archive??integrationInstance=${env.testInstance}"
			echo "${integURL}"
                        def deployIntegCmd = "curl --location \"${integURL}\" --user ${env.USR}:${env.PSW} --form \"file=@\\\"${params.IARFileName}\\\"\""
			bat(deployIntegCmd)

                    }
}
}
}
}
}
