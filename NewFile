def passwordHandler(String input) {
   StringBuilder result = new StringBuilder()
   for (int i = 0; i < input.length(); i++) {
       if (input.charAt(i) == '%') {
           result.append('%')
       }
       result.append(input.charAt(i))
   }
   return result.toString()
}
def Update_details(instance_selected) {
    if (instance_selected.equals("DEV")) {
     echo "inside update details-dev"
        env.USR = env.DEV_Creds_USR
        env.PSW = env.DEV_Creds_PSW
        echo "${env.DEV_URL}"
        env.serviceURL = env.DEV_URL
env.testInstance = env.test_Integration_Instance
        
        
    }
}
pipeline {
    agent any

    environment {
        DEV_Creds = credentials('DEV_CredID') // Jenkins credential (username/password)
    }

    stages {
        stage('Import Integration') {
            steps {
                script {
Update_details((params.InstanceURL).toString())
 //echo "${env.serviceURL}"
                    def selectedOption = "${params.Import_Method}".trim()
                    if (selectedOption == 'New') {
                     echo 'Adding new integration'

                        def integURL = "${env.serviceURL}/ic/api/integration/v1/integrations/archive?integrationInstance=${env.testInstance}"
			//echo "${integURL}"
                        def deployIntegCmd = "curl --location \"${integURL}\" --user ${env.USR}:${env.PSW} --form \"file=@\\\"${params.IARFileName}\\\"\""
			bat(deployIntegCmd)

                    } 
                }
            }
        }
    }
}
