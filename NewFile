def passwordHandler(String input) {
    StringBuilder result = new StringBuilder()
    for (int i = 0; i < input.length(); i++) {
        if (input.charAt(i) == '%') {
            result.append('%')
        }
        result.append(input.charAt(i))
    }
    return result.toString()
}
def Update_details(instance_selected) {
    if (instance_selected.equals("DEV")) {
        env.USR = env.DEV_Creds_USR
        env.PSW = env.DEV_Creds_PSW
        env.serviceURL = env.DEV_URL
    }
else if (instance_selected.equals("UAT")) {
        env.USR = env.DEV_Creds_USR
        env.PSW = env.DEV_Creds_PSW
        env.serviceURL = env.TEST_URL
		env.testInstance = env.test_Integration_Instance
    }
}

pipeline {
    agent any
 environment {
        DEV_Creds = credentials('DEV_CredID')
    }
    stages {
        stage('Import Integration') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DEV_CredID', usernameVariable: 'USR', passwordVariable: 'PSW')]) {
                    script {
					 Update_details((params.Instance_URL).toString())
                       //echo "${env.serviceURL}"
                    bat """
                        curl --location "${env.serviceURL}/ic/api/integration/v1/integrations/archive?integrationInstance=${env.testInstance}" \
                        --header "Accept: application/json" \
                        --user ${env.USR}:${passwordHandler(env.PSW)} \
                      //  --form "restDeployConfig={\\\"revisionId\\\": \\\"${params.Application_Version}\\\"}" \
                        --form "file=@\\\"${params.IARFileName}\\\""
                    """
                }
			}
		}
                        

                      
                    }
                }
            }
        
